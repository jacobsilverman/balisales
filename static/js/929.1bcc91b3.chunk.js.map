{"version":3,"file":"static/js/929.1bcc91b3.chunk.js","mappings":"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","sources":["Components/Account/Account.js","Components/Account/index.js","Components/Body/Post/DeleteModal/DeleteModal.js","Components/Body/Post/EditModal/EditModal.js","Components/Body/Post/Post.js","Components/Body/Post/index.js","Components/Settings/Settings.js","Components/Settings/index.js"],"sourcesContent":["\nimport {Fragment,  useEffect, useState } from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport { Col, Row } from 'react-bootstrap';\nimport { ClipLoader } from 'react-spinners';\n\nimport Post from '../Body/Post';\nimport './Account.scss';\n\nimport { deleteUserPost, getUserPosts } from '../../Data/Services/userInfo';\n\nimport { getStorage, ref, deleteObject } from \"firebase/storage\";\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase-config';\n\nfunction Account({user, accountView}) {\n\tconst [filterPosts, setFilterPosts] = useState([]);\n\n\tuseEffect(() => {\n        getUserPosts(user).then((result) => {\n            setFilterPosts(result);\n        }).catch(() => {\n            console.error(\"cant get user posts\");\n        });\n\t}, []);\n\t\n    const deletePost = async (item) => {\n\t\tconst storage = getStorage();\n        const postDoc = doc(db, \"posts\", item.id);\n\t\tawait deleteDoc(postDoc);\n\t\tdeleteUserPost(item.id);\n\t\tfor (var i = 0; i < item.numberOfImages; i++) {\n\t\t\tconst pictureRef = ref(storage, `PostImages/${item.id}/image-${i}`);\n\t\t\tawait deleteObject(pictureRef);\n\t\t}\n\n\t\tsetFilterPosts(\n\t\t\tfilterPosts?.filter((ele) => {\n\t\t\t\treturn ele.id !== item.id;\n\t\t\t})\n\t\t)\n    }\n\n\tconst setAccountData = () => {\n\t\tif (filterPosts.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={12} className=\"center\">\n\t\t\t\t\t\t<ClipLoader size={150} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t} \n\n\t\tlet result = [];\n        let partition = [];\n        for (let i=0; i< filterPosts.length; i++){\n            partition.push(filterPosts[i]);\n            if ((i+1)%3===0 || i === filterPosts.length-1) {\n                result.push(partition);\n                partition = [];\n            }\n        };\n\n\t\treturn (\n            result.length > 0 && \n\t\t\t<Grid container style={{padding:'0px'}} className=\"grid-container-posts\">\n\t\t\t\t{result.map((arr) => {\n\t\t\t\t\treturn arr.map((item) => {\n\t\t\t\t\t\t\treturn <Post item={item} key={item.id} accountView={accountView} deletePost={deletePost} />\n\t\t\t\t\t\t})\n\t\t\t\t\t})}\n\t\t\t</Grid>\n\t\t\t ||<Row>\n\t\t\t\t<Col xs={12} className=\"center\">\n\t\t\t\t\tNo Posts Available\n\t\t\t\t</Col>\n\t\t\t</Row>\n        );\n    }\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{setAccountData()}\n\t\t</Fragment>\n\t);\n\t\n}\n\nexport default Account;","import Account from './Account.js';\n\nexport default Account;","import { Modal } from '@mui/material';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nconst DeleteModal = ({deletePost, item, openDeleteModal, setOpenDeleteModal}) => {\n    return (\n        <Modal open={openDeleteModal} id=\"delete-modal\">\n            <Row className=\"modal-dialog delete-modal\">\n                <Col xs={5} sm={5} md={2} className=\"modal-content modal-background center\">\n                    <Row className=\"modal-header\">\n                        <Col className=\"modal-title\">Do you want to delete this post?</Col>\n                    </Row>\n                    <Row>\n                    <Col xs={6}>\n                            <Button onClick={() => setOpenDeleteModal(false)}>no</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {deletePost(item);setOpenDeleteModal(false)}}>yes</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import { Fragment, useState } from 'react';\n\nimport { brands, types } from '../../../../Data/Constants';\n\nimport DeleteModal from '../DeleteModal/DeleteModal';\n\nimport { Grid, Modal, TextareaAutosize } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from '../../../../firebase-config';\n\nimport { FaImage } from \"react-icons/fa\";\n\nimport { ref, getStorage, uploadBytesResumable } from \"firebase/storage\";\n\nconst EditModal = ({item, openEditModal, setOpenEditModal, deletePost}) => {\n    const [title, setTitle] = useState(item.title);\n    const [description, setDescription] = useState(item.description);\n    const [type, setType] = useState(item.type);\n    const [brand, setBrand] = useState(item.brand);\n    const [condition, setCondition] = useState(item.condition);\n    const [price, setPrice] = useState(item.price);\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\n    const [numberOfImages, setNumberOfImages] = useState(item.numberOfImages);\n    const [removedImages, setRemovedImages] = useState({});\n\n\n    // State to store uploaded file\n    const [file, setFile] = useState(\"\");\n    \n    // Handle file upload event and update state\n    function handleChange(event) {\n        setFile(event.target.files[0]);\n    }\n\n    const getOptions = (options) => {\n        return options.map((name, key) => {\n            return <option key={key} value={name}>{name}</option>;\n        });\n    };\n\n    const editPost = async () => {\n        const postDocRef = doc(db, \"posts\", item.id);\n        await setDoc(postDocRef, {\n            title,\n            type,\n            brand, \n            condition,\n            price,\n            description,\n            timeStamp: Date.now(),\n            numberOfImages: numberOfImages,\n            author: {name: item.author.name, id: item.author.id }\n        }).then(() => {\n            const pictureRef = ref(getStorage(), `PostImages/${item.id}/image-0`);\n            console.log(\"pictureRef: \", pictureRef);\n            // uploadBytesResumable(pictureRef, file);\n        }).catch((error) => {\n            console.error(\"problem: \", error)\n        }).finally(() => {\n            window.location.reload();\n        });\n    }\n\n    const handleImageClick = (url) => {\n        setRemovedImages(cur => {\n            cur[url] = !cur[url] ?? true\n            return cur;\n        });\n        console.log(removedImages);\n    }\n\n    const pictures = (\n        <Grid container>\n            {item.urls.map((url) => {\n                return (\n                    <Grid item key={url} className=\"center\" style={{backgroundImage: `url(${url})`, backgroundSize: \"100% 100%\", width: \"100px\", height: \"100px\"}} onClick={() => handleImageClick(url)} >\n                        {removedImages[url]}\n                    </Grid>\n                )})}\n        </Grid>\n    );\n\n    const addPicture = (\n        <Row className=\"edit-input\">    \n            {/* <Col className=\"center\">\n                <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n            </Col> */}\n            <Col xs={12} className=\"setting-item\">\n                <label className='profile-label' htmlFor=\"inputTag\">\n                    <span style={{color:\"black\"}}>Add Picture</span>\n                    <input id=\"inputTag\" className='profile-input' type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n                    <br />\n                    {<FaImage size={40}  />}\n                </label>\n            </Col>\n        </Row>\n    );\n\n    return (\n        <Modal open={openEditModal}>\n                                        \n            <Row className=\"edit-modal\">\n                <Col xs={7} className=\"modal-background center\">\n                    <DeleteModal deletePost={deletePost} item={item} openDeleteModal={openDeleteModal} setOpenDeleteModal={setOpenDeleteModal} />\n                    <Row className=\"edit-input\">\n                        <Col xs={6} sm={9} className=\"left\">\n                            <h2>Edit</h2>\n                        </Col>\n                        <Col xs={6} sm={3}>\n\n                            <Button variant=\"danger\" onClick={(e) => {e.preventDefault();setOpenDeleteModal(true);}}>Delete</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={title} label=\"Title\" className=\"input-width\" color=\"\" onChange={(event) => setTitle(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={price} label=\"Price\" className=\"input-width\" color=\"\" onChange={(event) => setPrice(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"brand-label\">Brand</InputLabel>\n                            <Select\n                                labelId=\"brand-label\"\n                                id=\"brand-select\"\n                                size=\"small\"\n                                value={brand}\n                                label=\"Brand\"\n                                onChange={(event) => setBrand(event.target.value)}>\n                                <MenuItem value=\"default\">default</MenuItem>\n                                {getOptions(brands, brand)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"business-label\">Business</InputLabel>\n                            <Select\n                                labelId=\"business-label\"\n                                id=\"business-select\"\n                                size=\"small\"\n                                value={type}\n                                label=\"Type\"\n                                onChange={(event) => setType(event.target.value)}>\n                                <MenuItem value=\"default\">select</MenuItem>\n                                {getOptions(types, type)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"condition-label\">Condition</InputLabel>\n                            <Select\n                                labelId=\"condition-label\"\n                                id=\"condition-select\"\n                                size=\"small\"\n                                value={condition}\n                                label=\"Condition\"\n                                onChange={(event) => setCondition(event.target.value)}>\n                                <MenuItem value=\"default\">default</MenuItem>\n                                {getOptions([1,2,3,4,5,6,7,8,9,10], condition)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextareaAutosize fullwidth=\"true\" minRows={3} value={description} placeholder=\"Description\" label=\"description\" onChange={(event) => setDescription(event.target.value)} />\n                    </Row>\n                    {/* {addPicture}\n                    {pictures} */}\n                    <Row className=\"edit-input\">\n                        <Col xs={6}>\n                            <Button onClick={() => setOpenEditModal(false)}>Cancel</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {editPost();setOpenEditModal(false)}}>Submit</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default EditModal;","import React, { Fragment, useMemo, useState } from 'react';\r\n\r\n// import { priceColors } from '../../../Data/Constants';\r\n\r\nimport './Post.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n \r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport EditModal from './EditModal/EditModal.js';\r\n// import AccountModal from '../../AccountModal';\r\n\r\nfunction Post({item, viewCount, accountView, deletePost}) {\r\n    const [openEditModal, setOpenEditModal] = useState(false);\r\n    // const [openAccountModal, setOpenAccountModal] = useState(false);\r\n\r\n    const queryParam = 'id='+item?.id;\r\n\r\n    // const priceCls = `price-container hidden-text color-${useMemo(() => {return priceColors(item?.type)}, [item?.type])}`;\r\n    const showViewCount = isNaN(12/viewCount);\r\n\r\n    return (\r\n        <Fragment>\r\n            <EditModal item={item} openEditModal={openEditModal} setOpenEditModal={setOpenEditModal} deletePost={deletePost}  />\r\n            \r\n            <Grid item className=\"post-container\" style={{backgroundImage: `url(${item?.urls[0]})`}} id={item?.id} xs={showViewCount ? 4 : 12/viewCount}>\r\n                {/* <div className=\"fake-background\"> */}\r\n                    <Link className=\"link\" to={!accountView && {pathname: '/singlePost', search: queryParam}} onClick={accountView && ((e) => {e.preventDefault();setOpenEditModal(true);})}>\r\n                        {item?.numberOfImages>1 && <svg style={{marginLeft: \"auto\", marginRight: \"1vw\", width:\"5vw\",height:\"5vw\",color:\"white\"}} viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M21 16V6H7V16H21M21 4C21.53 4 22.04 4.21 22.41 4.59C22.79 4.96 23 5.47 23 6V16C23 16.53 22.79 17.04 22.41 17.41C22.04 17.79 21.53 18 21 18H7C5.89 18 5 17.1 5 16V6C5 4.89 5.89 4 7 4H21M3 20H18V22H3C2.47 22 1.96 21.79 1.59 21.41C1.21 21.04 1 20.53 1 20V9H3V20Z\" /></svg>}\r\n                        {/* <Row> \r\n                            <Col xs={10} className=\"title-text hidden-text\">\r\n                                {item?.title?.toUpperCase()}\r\n                            </Col>\r\n                            <Col xs={2} className=\"delete-container\" style={{opacity: \"1\", visibility: \"visible\"}}>\r\n                                {item?.numberOfImages>1 && <svg style={{width:\"3vw\",height:\"3vw\",color:\"black\"}} viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M21 16V6H7V16H21M21 4C21.53 4 22.04 4.21 22.41 4.59C22.79 4.96 23 5.47 23 6V16C23 16.53 22.79 17.04 22.41 17.41C22.04 17.79 21.53 18 21 18H7C5.89 18 5 17.1 5 16V6C5 4.89 5.89 4 7 4H21M3 20H18V22H3C2.47 22 1.96 21.79 1.59 21.41C1.21 21.04 1 20.53 1 20V9H3V20Z\" /></svg>}\r\n                            </Col>\r\n                        </Row>\r\n                        {!accountView && <Row> \r\n                            <Col className={priceCls}>\r\n                                <span className=\"price\">${item?.price}</span>\r\n                            </Col>\r\n                        </Row>} */}\r\n                    </Link>\r\n                {/* </div> */}\r\n            </Grid> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Post;","import Post from './Post.js';\r\n\r\nexport default Post;","import { useEffect, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { getUserInfo, setUserInfo } from '../../Data/Services/userInfo.js';\r\n\r\nimport Account from '../Account';\r\n\r\nimport { FaImage } from \"react-icons/fa\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport './Settings.scss';\r\n\r\nfunction Settings() {\r\n    const [id, setId] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [instagram, setInstagram] = useState('');\r\n    const [facebook, setFacebook] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        getUserInfo().then((result) => {\r\n            setId(result.id);\r\n            setFirstName(result.firstName);\r\n            setLastName(result.lastName);\r\n            setDisplayName(result.displayName);\r\n            setPhoneNumber(result.phoneNumber);\r\n            setInstagram(result.instagram);\r\n            setFacebook(result.facebook);\r\n            setPosts(result.posts || []);\r\n        });\r\n    }, []);\r\n\r\n    function handleChange(event) {\r\n        setFile(event.target.files[0]);\r\n        setProfilePicture(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12} className=\"center settings-container\">\r\n                    <Row>\r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"first name\" color=\"\" onChange={(event) => setFirstName(event.target.value)} value={firstName} />\r\n                        </Col>\r\n            \r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"last name\" color=\"\" onChange={(event) => setLastName(event.target.value)} value={lastName} />\r\n                        </Col>\r\n            \r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"display name\" color=\"\" onChange={(event) => setDisplayName(event.target.value)} value={displayName} />\r\n                        </Col>\r\n                \r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"phone number\" color=\"\" onChange={(event) => setPhoneNumber(event.target.value)} value={phoneNumber} />\r\n                        </Col>\r\n                \r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"instagram\" color=\"\" onChange={(event) => setInstagram(event.target.value)} value={instagram} />\r\n                        </Col>\r\n                \r\n\r\n                        <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                            <TextField fullWidth label=\"facebook\" color=\"\" onChange={(event) => setFacebook(event.target.value)} value={facebook} />\r\n                        </Col>\r\n                \r\n                        <Col xs={12} className=\"setting-item\">\r\n                            <label className='profile-label' htmlFor=\"inputTag\">\r\n                                <span style={{color:\"black\"}}>Profile Picture</span>\r\n                                <input id=\"inputTag\" className='profile-input' type=\"file\" onChange={handleChange} accept=\"/image/*\" />\r\n                                <br />\r\n                                {(!profilePicture) ? <FaImage size={40} /> : <img src={profilePicture} className=\"upload-image\" alt=\"preview image\" />}\r\n                            </label>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} className=\"submit-button\">\r\n                            <Button variant=\"contained\" onClick={() => setUserInfo({id, firstName, lastName, displayName, phoneNumber, instagram, facebook, posts}, file)}>\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <hr />\r\n                <Account user={id} accountView={true} />\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Settings;","import Settings from './Settings.js';\r\n\r\nexport default Settings;"],"names":["user","accountView","useState","filterPosts","setFilterPosts","useEffect","getUserPosts","then","result","catch","console","error","deletePost","item","storage","getStorage","postDoc","doc","db","id","deleteDoc","deleteUserPost","i","numberOfImages","pictureRef","ref","deleteObject","filter","ele","Fragment","length","Row","Col","xs","className","ClipLoader","size","partition","push","Grid","container","style","padding","map","arr","Post","setAccountData","Account","openDeleteModal","setOpenDeleteModal","Modal","open","sm","md","Button","onClick","openEditModal","setOpenEditModal","title","setTitle","description","setDescription","type","setType","brand","setBrand","condition","setCondition","price","setPrice","removedImages","setRemovedImages","setFile","getOptions","options","name","key","value","editPost","postDocRef","setDoc","timeStamp","Date","now","author","log","finally","window","location","reload","urls","url","backgroundImage","backgroundSize","width","height","cur","handleImageClick","variant","e","preventDefault","TextField","fullWidth","label","color","onChange","event","target","FormControl","InputLabel","Select","labelId","MenuItem","brands","types","TextareaAutosize","fullwidth","minRows","placeholder","viewCount","queryParam","showViewCount","isNaN","to","pathname","search","marginLeft","marginRight","viewBox","fill","d","setId","firstName","setFirstName","lastName","setLastName","displayName","setDisplayName","phoneNumber","setPhoneNumber","instagram","setInstagram","facebook","setFacebook","file","posts","setPosts","profilePicture","setProfilePicture","getUserInfo","Container","lg","htmlFor","files","URL","createObjectURL","accept","src","alt","setUserInfo"],"sourceRoot":""}