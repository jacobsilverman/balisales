{"version":3,"file":"static/js/740.b4f8dc3e.chunk.js","mappings":"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","sources":["Components/Account/Account.js","Components/Settings/SettingsForm/index.js","Components/Settings/SettingsForm/SettingsForm.js","Components/Account/index.js","Components/Settings/Settings.js","Components/Settings/index.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\n\nimport Spinner from '../../Data/Constants/Spinner.js';\n\nimport Post from '../Body/Posts/Post';\n\nimport { getUserPosts } from '../../Data/Services/userInfo';\nconst EditModal  = React.lazy(() => import('../../Components/Body/Posts/Post/EditModal'));\n\nfunction Account({user, settingsPage}) {\n\tconst [filterPosts, setFilterPosts] = useState([]);\n\tconst [openEditModal, setOpenEditModal] = useState(false);\n\tconst [selectedPost, setSelectedPost] = useState({});\n\n\tuseEffect(() => {\n        getUserPosts(user).then((result) => {\n            setFilterPosts(result);\n        }).catch(() => {\n            console.error(\"cant get user posts\");\n        });\n\t}, []);\n\t\n\tconst setAccountData = () => {\n\t\tif (filterPosts.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Spinner /> \n\t\t\t);\n\t\t} \n\n\t\treturn (\n\t\t\t<div style={{padding:'20px'}} className=\"grid-container-posts\">\n\t\t\t\t{settingsPage && <EditModal \n\t\t\t\t\titem={selectedPost} \n\t\t\t\t\tfilterPosts={filterPosts}\n\t\t\t\t\tsetFilterPosts={setFilterPosts}\n\t\t\t\t\topenEditModal={openEditModal} \n\t\t\t\t\tsetOpenEditModal={setOpenEditModal} />}\n\t\t\t\t{filterPosts.map((item) => {\n\t\t\t\t\tconst displayUrl =  `url(${item?.urls[0]})`;\n\t\t\t\t\tconst queryParam = 'id='+item?.id;\n\t\t\t\t\treturn <Post \n\t\t\t\t\t\tdisplayUrl={displayUrl}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tqueryParam={queryParam}\n\t\t\t\t\t\tsettingsPage={settingsPage}\n\t\t\t\t\t\topenEditModal={openEditModal}\n\t\t\t\t\t\tsetOpenEditModal={setOpenEditModal}\n\t\t\t\t\t\tselectedPost={selectedPost}\n\t\t\t\t\t\tsetSelectedPost={setSelectedPost} />\n\t\t\t\t\t\t\n\t\t\t\t})}\n\t\t\t</div>\n        );\n    }\n\n\treturn setAccountData();\n}\n\nexport default Account;","import SettingsForm from \"./SettingsForm.js\";\r\n\r\nexport default SettingsForm;","import { useEffect, useMemo, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport { getUserInfo, setUserInfo } from '../../../Data/Services/userInfo.js';\r\n\r\nimport { FaImage } from \"react-icons/fa\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst SettingsForm = ({id}) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [displayName, setDisplayName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [instagram, setInstagram] = useState('');\r\n    const [facebook, setFacebook] = useState('');\r\n    const [file, setFile] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const [profilePicture, setProfilePicture] = useState(null);\r\n\r\n    const [validation, setValidation] = useState({\r\n        firstName: false,\r\n        lastName: false,\r\n        displayName: false,\r\n        phoneNumber: true\r\n    });\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const isValid = useMemo(() => {\r\n        return !Object.values(validation).some((item) => item === false);\r\n    }, [validation]);\r\n    \r\n    useEffect(() => {\r\n        getUserInfo().then((result) => {\r\n            setFirstName(result.firstName);\r\n            setLastName(result.lastName);\r\n            setDisplayName(result.displayName);\r\n            setPhoneNumber(result.phoneNumber);\r\n            setInstagram(result.instagram);\r\n            setFacebook(result.facebook);\r\n            setPosts(result.posts || []);\r\n            setValidation({\r\n                firstName: result.firstName.length > 0,\r\n                lastName: result.lastName.length > 0,\r\n                displayName: result.displayName.length > 0,\r\n                phoneNumber: result.phoneNumber.length === 0 || result.phoneNumber.length === 10\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    function handleProfileChange(event) {\r\n        setFile(event.target.files[0]);\r\n        setProfilePicture(URL.createObjectURL(event.target.files[0]));\r\n    }\r\n\r\n    const handleFirstNameChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setValidation(cur => {return {...cur, firstName: newVal !== \"\"}});\r\n        setFirstName(newVal);\r\n    }\r\n\r\n    const handleLastNameChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setValidation(cur => {return {...cur, lastName: newVal !== \"\"}});\r\n        setLastName(newVal);\r\n    }\r\n\r\n    const handleDisplayNameChange = (event) => {\r\n        const newVal = event.target.value;\r\n        setValidation(cur => {return {...cur, displayName: newVal !== \"\"}});\r\n        setDisplayName(newVal);\r\n    }\r\n\r\n    const handlePhoneNumberChange = (event) => {\r\n        let result = event.target.value;\r\n        let parsedNumber = result.replace(\"(\",\"\").replace(\")\",\"\").replace(\" \",\"\").replace(\"-\",\"\");\r\n        setValidation(cur => {return {...cur, phoneNumber: parsedNumber.length === 0  || parsedNumber.length === 10}});\r\n        setPhoneNumber(parsedNumber);\r\n    }\r\n\r\n    const displayNumber = (number) => {\r\n        if (isNaN(number)) return \"\";\r\n        return (number.length >3 ? \"(\" : \"\")\r\n        + number.substring(0, 3) \r\n        + (number.length > 3 ? \") \" : \"\")\r\n        + number.substring(3, 6) \r\n        + (number.length > 6 ? \"-\" : \"\")\r\n        + number.substring(6, 10);\r\n    }\r\n\r\n    return (\r\n        <Col xs={12} className=\"center settings-container\">\r\n            <Row>\r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"First Name\")} error={!validation.firstName} type=\"search\" onChange={handleFirstNameChange} value={firstName} />\r\n                </Col>\r\n\r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"Last Name\")} error={!validation.lastName} type=\"search\" onChange={handleLastNameChange} value={lastName} />\r\n                </Col>\r\n\r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"Display Name\")} error={!validation.displayName} type=\"search\" onChange={handleDisplayNameChange} value={displayName} />\r\n                </Col>\r\n        \r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"Phone Number\")} error={!validation.phoneNumber} onChange={handlePhoneNumberChange} value={displayNumber(phoneNumber)} inputProps={{ maxLength: 14 }} />\r\n                </Col>\r\n        \r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"Instagram\")} color=\"\" type=\"url\" onChange={(event) => setInstagram(event.target.value)} value={instagram} />\r\n                </Col>\r\n\r\n                <Col xs={12} md=\"6\" lg={4} className=\"setting-item\">\r\n                    <TextField fullWidth label={t(\"Facebook\")} color=\"\" type=\"url\" onChange={(event) => setFacebook(event.target.value)} value={facebook} />\r\n                </Col>\r\n        \r\n                <Col xs={12} className=\"setting-item\">\r\n                    <label className='profile-label' htmlFor=\"inputTag\">\r\n                        <span style={{color:\"black\"}}>{t('Profile Picture')}</span>\r\n                        <input id=\"inputTag\" className='profile-input' type=\"file\" onChange={handleProfileChange} accept=\"/image/*\" />\r\n                        <br />\r\n                        {(!profilePicture) ? <FaImage size={40} /> : <img src={profilePicture} className=\"upload-image\" alt=\"preview image\" />}\r\n                    </label>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} className=\"submit-button\">\r\n                    <Button disabled={!isValid} variant=\"contained\" onClick={() => setUserInfo({id, firstName, lastName, displayName, phoneNumber, instagram, facebook, posts}, file)}>\r\n                        {t(\"Submit\")}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default SettingsForm;","import Account from './Account.js';\n\nexport default Account;","\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nimport SettingsForm from './SettingsForm';\r\n\r\nimport Account from '../Account';\r\n\r\nimport './Settings.scss';\r\n\r\nfunction Settings() {\r\n    const id = localStorage.getItem(\"uid\");\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <SettingsForm id={id} />\r\n                <hr />\r\n                <Account user={id} settingsPage={true} />\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Settings;","import Settings from './Settings.js';\r\n\r\nexport default Settings;"],"names":["EditModal","React","user","settingsPage","useState","filterPosts","setFilterPosts","openEditModal","setOpenEditModal","selectedPost","setSelectedPost","useEffect","getUserPosts","then","result","catch","console","error","length","style","padding","className","item","map","displayUrl","urls","queryParam","id","firstName","setFirstName","lastName","setLastName","displayName","setDisplayName","phoneNumber","setPhoneNumber","instagram","setInstagram","facebook","setFacebook","file","setFile","posts","setPosts","profilePicture","setProfilePicture","validation","setValidation","t","useTranslation","isValid","useMemo","Object","values","some","getUserInfo","number","Col","xs","Row","md","lg","TextField","fullWidth","label","type","onChange","event","newVal","target","value","cur","parsedNumber","replace","isNaN","substring","inputProps","maxLength","color","htmlFor","files","URL","createObjectURL","accept","src","alt","size","Button","disabled","variant","onClick","setUserInfo","localStorage","getItem","Container"],"sourceRoot":""}