{"version":3,"file":"static/js/979.126ebaf4.chunk.js","mappings":"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","sources":["Components/Common/AddImages/AddImages.js","Components/CreatePost/CreatePost.js","Components/CreatePost/index.js"],"sourcesContent":["\r\nimport { FaImage } from \"react-icons/fa\";\r\nimport { isMobile } from \"../../../Data/Constants\";\r\nimport './AddImages.scss'\r\n\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\n\r\nimport { Card, Grid } from '@mui/material';\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const AddImages = ({files, setFiles, validation, setValidation, disableSubmit}) => {\r\n    const extraSize = (files?.length <= 1) ? \"200px\": \"100px\";\r\n    const { t } = useTranslation();\r\n    \r\n    const handleImagePrev = (index) => {\r\n        if (index <= 0) {\r\n            return \r\n        }\r\n        setFiles(cur => {\r\n            let result = [...cur];\r\n            const temp =result[index-1];\r\n\r\n            result[index-1] = result[index];\r\n            result[index] = temp;\r\n\r\n            return result;\r\n        })\r\n    }\r\n    \r\n    const handleImageNext = (index) => {\r\n        if (index >= files?.length-1) {\r\n            return \r\n        }\r\n\r\n        setFiles(cur => {\r\n            let result = [...cur];\r\n            const temp = result[index+1];\r\n\r\n            result[index+1] = result[index];\r\n            result[index] = temp;\r\n            return result;\r\n        })\r\n    }\r\n\r\n    const handleRemoveImage = (i) => {\r\n        let newItems = files?.filter((ele, index) => {\r\n            return index !== i\r\n        })\r\n\r\n        if (newItems.length === 0) {\r\n            setValidation(cur => {return {...cur, picture: false}});\r\n        }\r\n        setFiles(newItems);\r\n    }\r\n\r\n    const handleAddingImage = (event) => {\r\n        setValidation(cur => {return {...cur, picture: true}});\r\n        setFiles(cur => {\r\n            return [...cur, event.target.files[0]]\r\n        });\r\n    }\r\n    \r\n    const addPicture = (\r\n        <Row className=\"edit-input\">    \r\n            <Col xs={12} className=\"setting-item\">\r\n                <label className='profile-label center' style={{color: (validation.picture===false && disableSubmit) ? \"red\" : \"black\"}} htmlFor=\"add-post-image\">\r\n                    <input id=\"add-post-image\" className='profile-input' type=\"file\" onChange={handleAddingImage} accept=\"image/*\"  />\r\n                    <span>{t('Add Picture')}</span>\r\n                    <br />\r\n                    {<FaImage size={40} />}\r\n                </label>\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n    const pictures = (\r\n        <Grid justifyContent=\"center\" container spacing={3}>\r\n            {files?.map((rawUrl, index) => {\r\n                const url = (typeof rawUrl !== \"string\") ? URL.createObjectURL(rawUrl) : rawUrl;\r\n                const space = index === 0 ? \"flex-end\" : index !== files.length-1 ? \"space-between\" : \"flex-start\";\r\n                return (\r\n                    <Grid item key={url}>\r\n                        <Card>\r\n                            <Button variant=\"danger\" style={{width: \"100%\", borderRadius: \"0px\"}} onClick={() => handleRemoveImage(index)}>{t('Remove')}</Button>\r\n                            <Grid item key={url} className=\"center\" style={{backgroundImage: `url(${url})`, backgroundSize: \"100% 100%\", width: extraSize, height: extraSize}}  >\r\n                                \r\n                            </Grid>\r\n                            <div style={{display:\"flex\", justifyContent: space}}>\r\n                                {index > 0 && <Button variant={\"outlined\"} onClick={() => handleImagePrev(index)}>{(!isMobile) ? \"<\" : \"^\"}</Button>}\r\n                                {index < files.length-1 && <Button variant={\"outlined\"} onClick={() => handleImageNext(index)}>{(!isMobile) ? \">\" : \"v\"}</Button>}\r\n                            </div>\r\n                        </Card>\r\n                    </Grid>\r\n                )})}\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {addPicture}\r\n            {pictures}\r\n        </>\r\n    )\r\n}","import { useMemo, useState } from 'react';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { brands, blades, environment, types } from '../../Data/Constants';\r\n\r\nimport { addUserPost } from '../../Data/Services/userInfo';\r\nimport { AddImages } from '../Common/AddImages/AddImages';\r\n\r\nimport { addDoc, collection } from 'firebase/firestore';\r\n\r\nimport { auth, db, storage } from \"../../firebase-config.js\";\r\nimport { ref, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nimport './CreatePost.scss';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction CreatePost() {\r\n    const isAuth = useState(localStorage.getItem(\"isAuth\"));\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [blade, setBlade] = useState(\"\");\r\n\r\n    const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n    // State to store uploaded file\r\n    const [files, setFiles] = useState([]);\r\n    // const [showFiles, setShowFiles] = useState([]);\r\n\r\n    // progress\r\n    const [percent, setPercent] = useState(0);\r\n\r\n    // const [numberOfUploads, setNumberOfUploads] = useState(0);\r\n    const [validation, setValidation] = useState({\r\n        title: false,\r\n        price: false,\r\n        brand: false,\r\n        sale: false,\r\n        condition: false,\r\n        blade: false,\r\n        picture: false\r\n    });\r\n\r\n    const { t } = useTranslation();\r\n\r\n    let isValidated = useMemo(() => {\r\n        const valid = !Object.values(validation).some((item) => item === false);\r\n\r\n        if (valid === true) {\r\n            setDisableSubmit(false);\r\n        }\r\n\r\n        return valid;\r\n    }, [validation]);\r\n    \r\n    const resetPostCreation = () => {\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setType(\"\");\r\n        setBrand(\"\");\r\n        setCondition(\"\");\r\n        setPrice(\"\");\r\n        setBlade(\"\");\r\n        // setNumberOfUploads(0);\r\n        // setShowFiles([]);\r\n        setFiles([]);\r\n        setDisableSubmit(false);\r\n    }\r\n\r\n    // Handle file upload event and update state\r\n    // function handlePictureChange(event) {\r\n    //     if (event.target.files && event.target.files[0]) {\r\n    //         setShowFiles(cur => [...cur, URL.createObjectURL(event.target.files[0])]);\r\n    //         setFiles(cur => [...cur, event.target.files[0]]);\r\n    //         setNumberOfUploads(numberOfUploads => numberOfUploads+1);\r\n    //         setValidation(cur => {return {...cur, picture: true}});\r\n    //     }\r\n    // }\r\n\r\n    // function removePicture(index) {\r\n\r\n    //     let newShowFiles = [];\r\n    //     let newFileNames = [];\r\n    //     for (let i=0; i<showFiles.length;i++) {\r\n    //         if (index!==i){\r\n    //             newShowFiles.push(showFiles[i]);\r\n    //             newFileNames.push(files[i]);\r\n    //         }\r\n    //     }\r\n    //     setShowFiles(newShowFiles);\r\n    //     setFiles(newFileNames);\r\n    //     setNumberOfUploads(numOfUploads => numOfUploads-1);\r\n    //     if (numberOfUploads-1 === 0){\r\n    //         setValidation(cur => {return {...cur, picture: false}});\r\n    //     }\r\n    // }\r\n\r\n    // function pictureInputs() {\r\n    //     let allInputs = [];\r\n\r\n    //     for (let i = 0; i < files.length; i++) {\r\n    //         allInputs.push(\r\n    //             <Col xs=\"12\" className=\"setting-item center\" key={files[i]?.name}>\r\n    //                 <label className='profile-label' htmlFor={\"inputPicture-\"+files[i]?.name} onClick={() => removePicture(i)}>\r\n    //                     <span>{files[i]?.name}</span>\r\n    //                     <br />\r\n    //                     <img id={\"inputPicture-\"+files[i]?.name} src={showFiles[i]} className=\"upload-image\" alt=\"preview image\" />\r\n    //                 </label>\r\n    //             </Col>\r\n    //         );\r\n    //     }\r\n\r\n    //     return allInputs;\r\n    // }\r\n\r\n    const createPost = async () => {\r\n        setDisableSubmit(true);\r\n\r\n        if (!isValidated) {\r\n            return\r\n        }\r\n\r\n        if (!files[0]) {\r\n            alert(\"Please upload an image first!\");\r\n            return\r\n        }\r\n        \r\n        const postsCollectionRef = collection(db, process.env.REACT_APP_ENVIRONMENT+\"-posts\");\r\n        await addDoc(postsCollectionRef, {\r\n            status: \"Available\",\r\n            title,\r\n            type,\r\n            blade,\r\n            brand, \r\n            condition,\r\n            price,\r\n            description,\r\n            numberOfImages: files.length,\r\n            timeStamp: Date.now(),\r\n            author: {name: auth?.currentUser?.displayName || 'anonymous', id: auth?.currentUser?.uid || 'none' }\r\n        }).then((result) => {\r\n            const promises = [];\r\n            \r\n            files.map((file, index) => {\r\n                const storageRef = ref(storage, `/${environment()}-postImages/${result.id}/image-${index}`);\r\n                const uploadTask = uploadBytesResumable(storageRef, file);\r\n                promises.push(uploadTask);\r\n\r\n                uploadTask.on(\r\n                    \"state_changed\",\r\n                    (snapshot) => {\r\n                        const percent = Math.round(\r\n                            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                        );\r\n                        setPercent(percent);\r\n                    },\r\n                    (err) => console.log(err),\r\n                    () => {\r\n                        console.log(storageRef);\r\n                    }\r\n                );\r\n            });\r\n\r\n            Promise.all(promises).then(() => {\r\n                console.log(\"all uploaded\");\r\n                resetPostCreation();\r\n            }).catch((err) => {\r\n                console.error(err)\r\n            })\r\n            return result;\r\n        \r\n        }).then((result) => {\r\n            addUserPost(result.id);\r\n        }).catch(() =>{\r\n            console.log(\"error with creating post\");\r\n        });\r\n    }\r\n\r\n    const getOptions = (options, key) => {\r\n        return options.map((name) => {\r\n            return <MenuItem key={key+\"-\"+name} value={name}>{t(name)}</MenuItem>;\r\n        });\r\n    };\r\n\r\n    const handleTitleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue.length > 25 || newValue.match(/['\\-\"><;:\\\\+{}!@#$%=^*_|[\\]]/)) {\r\n            return\r\n        }\r\n\r\n        setValidation(cur => {return {...cur, title: newValue !== \"\"}});\r\n        setTitle(newValue);\r\n    }\r\n\r\n    const handlePriceChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue.match(/[-]/)) {\r\n            return\r\n        }\r\n\r\n        setValidation(cur => {return {...cur, price: newValue !== \"\"}});\r\n        setPrice(newValue);\r\n    }\r\n\r\n    const handleBrandChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, brand: true}});\r\n        }\r\n        \r\n        setBrand(newValue);\r\n    }\r\n\r\n    const handleSaleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, sale: true}});\r\n        }\r\n\r\n        setType(newValue);\r\n    }\r\n\r\n    const handleConditionChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, condition: true}});\r\n        }\r\n        \r\n        setCondition(newValue);\r\n    }\r\n\r\n    const handleBladeChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, blade: true}});\r\n        }\r\n        \r\n        setBlade(newValue);\r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue.length > 425 || newValue.match(/[\\-><;:\\\\+{}@%=^*_|[\\]]/)) {\r\n            return;\r\n        }\r\n        setDescription(newValue);\r\n    }\r\n\r\n    const mainPage = (\r\n        <>\r\n            <Container className=\"create-header-container\">\r\n                <Row>\r\n                    <Col className=\"create-header\">\r\n                        <h2>{t(\"Create Post\")}</h2>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container className=\"create-container\">\r\n                <Row>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <TextField fullWidth label={t(\"Title\")} color=\"\" error={validation.title === false && disableSubmit} type=\"search\" value={title} onChange={handleTitleChange} />\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <TextField fullWidth label={t(\"Price\")} color=\"\" error={validation.price === false && disableSubmit} type=\"number\" value={price} onChange={handlePriceChange} />\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <FormControl fullWidth error={validation.brand === false && disableSubmit}>\r\n                            <InputLabel id=\"brand-label\">{t(\"Brand\")}</InputLabel>\r\n                            <Select\r\n                                labelId=\"brand-label\"\r\n                                id=\"brand-select\"\r\n                                label=\"Brand\"\r\n                                defaultValue=\"\"\r\n                                value={brand}\r\n                                onChange={handleBrandChange}>\r\n                                {getOptions(brands, \"brand\")}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <FormControl fullWidth error={validation.sale === false && disableSubmit}>\r\n                            <InputLabel id=\"sale-type-label\">{t(\"Sale Type\")}</InputLabel>\r\n                            <Select\r\n                                labelId=\"sale-type-label\"\r\n                                id=\"sale-type-select\"\r\n                                label={t(\"Sale Type\")}\r\n                                defaultValue=\"\"\r\n                                value={type}\r\n                                onChange={handleSaleChange}>\r\n                                {getOptions(types, \"type\")}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <FormControl fullWidth error={validation.condition === false && disableSubmit}>\r\n                            <InputLabel id=\"condition-label\">{t(\"Condition\")}</InputLabel>\r\n                            <Select\r\n                                labelId=\"condition-label\"\r\n                                id=\"condition-select\"\r\n                                label={t(\"Condition\")}\r\n                                defaultValue=\"\"\r\n                                value={condition}\r\n                                onChange={handleConditionChange}>\r\n                                {getOptions([1,2,3,4,5,6,7,8,9,10], \"condition\")}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                    <Col xs={12} md={6} className=\"create-input\">\r\n                        <FormControl fullWidth error={validation.blade === false && disableSubmit}>\r\n                            <InputLabel id=\"blade-label\">{t(\"Blade\")}</InputLabel>\r\n                            <Select\r\n                                labelId=\"blade-label\"\r\n                                id=\"blade-select\"\r\n                                label={t(\"Blade\")}\r\n                                defaultValue=\"\"\r\n                                value={blade}\r\n                                onChange={handleBladeChange}>\r\n                                {getOptions(blades, \"blade\")}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <TextareaAutosize style={{width: \"100%\"}} minRows={5} value={description} placeholder={t(\"Description\")} label={t(\"Description\")} onChange={handleDescriptionChange} />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {/* <Col xs=\"12\" className=\"setting-item center\">\r\n                        <label className='profile-label' htmlFor={\"inputPicture-default\"}>\r\n                            <b>{t(\"Upload Image\")}</b>\r\n                            <input id={\"inputPicture-default\"} className=\"profile-input\" type=\"file\" onChange={e => handlePictureChange(e)} accept=\"/image/*\" />\r\n                            <br />\r\n                            <FaImage size={70} className=\"\" />\r\n                        </label>\r\n                    </Col>\r\n                    {pictureInputs()} */}\r\n                    <AddImages files={files} setFiles={setFiles} validation={validation} setValidation={setValidation} disableSubmit={disableSubmit} />\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} className=\"center\">\r\n                        <Button disabled={disableSubmit} className=\"create-submit-button\" onClick={createPost}>{t(\"Submit\")}</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n    \r\n    const disabledPage = (\r\n        <>\r\n            <Container className=\"create-header-container\">\r\n                <Row>\r\n                    <Col className=\"create-header\">\r\n                        <h2>{t(\"Information Missing\")}</h2>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container className=\"create-container\">\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h3>\r\n                            Please login before trying to create a post.\r\n                        </h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n\r\n    \r\n\r\n    return  isAuth[0]==='true' ? mainPage : disabledPage;\r\n}\r\n\r\nexport default CreatePost;","import CreatePost from './CreatePost';\r\n\r\nexport default CreatePost;"],"names":["AddImages","files","setFiles","validation","setValidation","disableSubmit","extraSize","length","t","useTranslation","addPicture","Row","className","Col","xs","style","color","picture","htmlFor","id","type","onChange","event","cur","target","accept","size","pictures","Grid","justifyContent","container","spacing","map","rawUrl","index","url","URL","createObjectURL","space","item","Card","Button","variant","width","borderRadius","onClick","i","newItems","filter","ele","handleRemoveImage","backgroundImage","backgroundSize","height","display","result","temp","handleImagePrev","isMobile","handleImageNext","isAuth","useState","localStorage","getItem","title","setTitle","description","setDescription","setType","brand","setBrand","condition","setCondition","price","setPrice","blade","setBlade","setDisableSubmit","setPercent","sale","isValidated","useMemo","valid","Object","values","some","createPost","alert","postsCollectionRef","collection","db","process","addDoc","status","numberOfImages","timeStamp","Date","now","author","name","auth","displayName","uid","then","promises","file","storageRef","ref","storage","environment","uploadTask","uploadBytesResumable","push","on","snapshot","percent","Math","round","bytesTransferred","totalBytes","err","console","log","Promise","all","catch","error","addUserPost","getOptions","options","key","MenuItem","value","mainPage","Container","md","TextField","fullWidth","label","newValue","match","FormControl","InputLabel","Select","labelId","defaultValue","brands","types","blades","TextareaAutosize","minRows","placeholder","disabled","disabledPage"],"sourceRoot":""}