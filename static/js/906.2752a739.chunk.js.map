{"version":3,"file":"static/js/906.2752a739.chunk.js","mappings":"wRAoFA,MApEA,YAAuC,IAArBA,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YACvB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,YACHC,EAAAA,EAAAA,IAAaR,GAAMS,MAAK,SAACC,GAC9BA,EAAOC,MAAK,SAACC,EAAGC,GACf,OAAOA,EAAEC,UAAYF,EAAEE,SACvB,IACQV,EAAeM,EAClB,IAAEK,OAAM,WACLC,QAAQC,MAAM,sBACjB,GACP,GAAE,IAEA,IAAMC,EAAU,yCAAG,WAAOC,GAAP,yFACfC,GAAUC,EAAAA,EAAAA,MACJC,GAAUC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASL,EAAKM,IAFvB,UAGfC,EAAAA,EAAAA,IAAUJ,GAHK,QAIrBK,EAAAA,EAAAA,IAAeR,EAAKM,IACXG,EAAI,EALQ,YAKLA,EAAIT,EAAKU,gBALJ,wBAMdC,GAAaC,EAAAA,EAAAA,IAAIX,EAAD,qBAAwBD,EAAKM,GAA7B,kBAAyCG,IAN3C,WAOdI,EAAAA,EAAAA,IAAaF,GAPC,QAKoBF,IALpB,uBAUrBxB,EAAc,OACbD,QADa,IACbA,OADa,EACbA,EAAa8B,QAAO,SAACC,GACpB,OAAOA,EAAIT,KAAON,EAAKM,EACvB,KAbmB,4CAAH,sDAkDnB,OAhC4B,IAAvBtB,EAAYgC,QAEd,SAACC,EAAA,EAAD,IAKQjC,EAAYgC,OAAS,IAC9B,SAACE,EAAA,GAAD,CAAMC,WAAS,EAACC,MAAO,CAACC,QAAQ,OAAQC,UAAU,uBAAlD,SACEtC,EAAYuC,KAAI,SAACvB,GACjB,IAAMwB,EAAU,qBAAWxB,QAAX,IAAWA,OAAX,EAAWA,EAAMyB,KAAK,GAAtB,KACVC,EAAa,cAAM1B,QAAN,IAAMA,OAAN,EAAMA,EAAMM,IAC/B,OAAO,SAACqB,EAAA,EAAD,CACNH,WAAYA,EACZxB,KAAMA,EAEN0B,WAAYA,EACZ5C,YAAaA,EACbiB,WAAYA,EACZb,cAAeA,EACfC,iBAAkBA,GALba,EAAKM,GAOX,QAEC,SAACsB,EAAA,EAAD,WACF,SAACC,EAAA,EAAD,CAAKC,GAAI,GAAIR,UAAU,SAAvB,iCAQH,C,2CChFD,UAAeS,EAAf,C","sources":["Components/Account/Account.js","Components/Account/index.js"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport { Col, Row } from 'react-bootstrap';\nimport Spinner from '../../Data/Constants/Spinner.js';\n\nimport Post from '../Body/Posts/Post';\nimport './Account.scss';\n\nimport { deleteUserPost, getUserPosts } from '../../Data/Services/userInfo';\n\nimport { getStorage, ref, deleteObject } from \"firebase/storage\";\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase-config';\n\nfunction Account({user, accountView}) {\n\tconst [filterPosts, setFilterPosts] = useState([]);\n\tconst [openEditModal, setOpenEditModal] = useState(false);\n\n\tuseEffect(() => {\n        getUserPosts(user).then((result) => {\n\t\t\tresult.sort((a, b) => {\n\t\t\t\treturn b.timeStamp - a.timeStamp;\n\t\t\t});\n            setFilterPosts(result);\n        }).catch(() => {\n            console.error(\"cant get user posts\");\n        });\n\t}, []);\n\t\n    const deletePost = async (item) => {\n\t\tconst storage = getStorage();\n        const postDoc = doc(db, \"posts\", item.id);\n\t\tawait deleteDoc(postDoc);\n\t\tdeleteUserPost(item.id);\n\t\tfor (var i = 0; i < item.numberOfImages; i++) {\n\t\t\tconst pictureRef = ref(storage, `PostImages/${item.id}/image-${i}`);\n\t\t\tawait deleteObject(pictureRef);\n\t\t}\n\n\t\tsetFilterPosts(\n\t\t\tfilterPosts?.filter((ele) => {\n\t\t\t\treturn ele.id !== item.id;\n\t\t\t})\n\t\t)\n    }\n\n\tconst setAccountData = () => {\n\t\tif (filterPosts.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Spinner />\n\t\t\t);\n\t\t} \n\n\t\treturn (\n            filterPosts.length > 0 && \n\t\t\t<Grid container style={{padding:'0px'}} className=\"grid-container-posts\">\n\t\t\t\t{filterPosts.map((item) => {\n\t\t\t\t\tconst displayUrl =  `url(${item?.urls[0]})`;\n\t\t\t\t\tconst queryParam = 'id='+item?.id;\n\t\t\t\t\treturn <Post \n\t\t\t\t\t\tdisplayUrl={displayUrl}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tqueryParam={queryParam}\n\t\t\t\t\t\taccountView={accountView}\n\t\t\t\t\t\tdeletePost={deletePost}\n\t\t\t\t\t\topenEditModal={openEditModal}\n\t\t\t\t\t\tsetOpenEditModal={setOpenEditModal} />\n\t\t\t\t\t\t\n\t\t\t\t})}\n\t\t\t</Grid>\n\t\t\t|| <Row>\n\t\t\t\t<Col xs={12} className=\"center\">\n\t\t\t\t\tNo Posts Available\n\t\t\t\t</Col>\n\t\t\t</Row>\n        );\n    }\n\n\treturn setAccountData();\n}\n\nexport default Account;","import Account from './Account.js';\n\nexport default Account;"],"names":["user","accountView","useState","filterPosts","setFilterPosts","openEditModal","setOpenEditModal","useEffect","getUserPosts","then","result","sort","a","b","timeStamp","catch","console","error","deletePost","item","storage","getStorage","postDoc","doc","db","id","deleteDoc","deleteUserPost","i","numberOfImages","pictureRef","ref","deleteObject","filter","ele","length","Spinner","Grid","container","style","padding","className","map","displayUrl","urls","queryParam","Post","Row","Col","xs","Account"],"sourceRoot":""}