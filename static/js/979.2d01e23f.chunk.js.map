{"version":3,"file":"static/js/979.2d01e23f.chunk.js","mappings":"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","sources":["Components/CreatePost/CreatePost.js","Components/CreatePost/index.js"],"sourcesContent":["import { useMemo, useState } from 'react';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nimport { brands, blades, types } from '../../Data/Constants';\r\n\r\nimport { addUserPost } from '../../Data/Services/userInfo';\r\n\r\nimport { addDoc, collection } from 'firebase/firestore';\r\n\r\nimport { auth, db, storage } from \"../../firebase-config.js\";\r\nimport { ref, uploadBytesResumable } from \"firebase/storage\";\r\n\r\nimport { FaImage } from \"react-icons/fa\";\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nimport './CreatePost.scss';\r\n\r\nfunction CreatePost() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [brand, setBrand] = useState(\"\");\r\n    const [condition, setCondition] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [blade, setBlade] = useState(\"\");\r\n\r\n    const [disableSubmit, setDisableSubmit] = useState(false);\r\n\r\n    // State to store uploaded file\r\n    const [files, setFiles] = useState([]);\r\n    const [showFiles, setShowFiles] = useState([]);\r\n\r\n    // progress\r\n    const [percent, setPercent] = useState(0);\r\n\r\n    const [numberOfUploads, setNumberOfUploads] = useState(0);\r\n    const [validation, setValidation] = useState({\r\n        title: false,\r\n        price: false,\r\n        brand: false,\r\n        sale: false,\r\n        condition: false,\r\n        blade: false\r\n    });\r\n\r\n    let isValidated = useMemo(() => {\r\n        const valid = !Object.values(validation).some((item) => item === false);\r\n\r\n        if (valid === true) {\r\n            setDisableSubmit(false);\r\n        }\r\n\r\n        return valid;\r\n    }, [validation]);\r\n    \r\n    const resetPostCreation = () => {\r\n        setTitle(\"\");\r\n        setDescription(\"\");\r\n        setType(\"\");\r\n        setBrand(\"\");\r\n        setCondition(\"\");\r\n        setPrice(\"\");\r\n        setBlade(\"\");\r\n        setNumberOfUploads(0);\r\n        setFiles([]);\r\n        setShowFiles([]);\r\n        setDisableSubmit(false);\r\n    }\r\n\r\n    // Handle file upload event and update state\r\n    function handlePictureChange(event, index) {\r\n        if (event.target.files && event.target.files[0] && index === 0) {\r\n            setShowFiles([URL.createObjectURL(event.target.files[0]), ...showFiles]);\r\n            setFiles(cur => [...cur, event.target.files[0]]);\r\n            setNumberOfUploads(numberOfUploads => numberOfUploads+1);\r\n        }\r\n    }\r\n\r\n    function removePicture(index) {\r\n        if (index !== 0) {\r\n            setShowFiles(showFiles => showFiles.splice(index, 1));\r\n            setFiles(files => files.splice(index, 1));\r\n            setNumberOfUploads(numberOfUploads => numberOfUploads-1);\r\n        }\r\n    }\r\n\r\n    function pictureInputs() {\r\n        let allInputs = [];\r\n\r\n        for (let i = 0; i <= numberOfUploads; i++) {\r\n            allInputs.push(\r\n                <Col xs=\"12\" sm={(numberOfUploads > 0) ? 6 : 12} className=\"setting-item center\" key={i+\"+\"+numberOfUploads}>\r\n                    <label className='profile-label' htmlFor={\"inputPicture-\"+i} onClick={(i !==0)  ? () => removePicture(i) : null}>\r\n                        <span>{files[numberOfUploads-i]?.name || \"Upload Image\"}</span>\r\n                        {(i===0) && <input id={\"inputPicture-\"+i} className=\"profile-input\" type=\"file\" onChange={e => handlePictureChange(e, i)} accept=\"/image/*\" />}\r\n                        <br />\r\n                        {(i===0) ? <FaImage size={70} className=\"\" /> : <img src={showFiles[numberOfUploads-i]} className=\"upload-image\" alt=\"preview image\" />}\r\n                    </label>\r\n                </Col>\r\n            );\r\n        }\r\n\r\n        return allInputs;\r\n    }\r\n\r\n    const createPost = async () => {\r\n        if (!isValidated) {\r\n            setDisableSubmit(true);\r\n            return\r\n        }\r\n\r\n        if (!files[0]) {\r\n            alert(\"Please upload an image first!\");\r\n            return\r\n        }\r\n        \r\n        const postsCollectionRef = collection(db, \"posts\");\r\n        await addDoc(postsCollectionRef, {\r\n            title,\r\n            type,\r\n            brand, \r\n            condition,\r\n            price,\r\n            description,\r\n            numberOfImages: files.length,\r\n            timeStamp: Date.now(),\r\n            author: {name: auth?.currentUser?.displayName || 'anonymous', id: auth?.currentUser?.uid || 'none' }\r\n        }).then((result) => {\r\n            const promises = [];\r\n            \r\n            files.map((file, index) => {\r\n                const storageRef = ref(storage, `/PostImages/${result.id}/image-${index}`);\r\n                const uploadTask = uploadBytesResumable(storageRef, file);\r\n                promises.push(uploadTask);\r\n\r\n                uploadTask.on(\r\n                    \"state_changed\",\r\n                    (snapshot) => {\r\n                        const percent = Math.round(\r\n                            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                        );\r\n                        setPercent(percent);\r\n                    },\r\n                    (err) => console.log(err),\r\n                    () => {\r\n                        console.log(storageRef);\r\n                    }\r\n                );\r\n            });\r\n\r\n            Promise.all(promises).then(() => {\r\n                console.log(\"all uploaded\");\r\n                resetPostCreation();\r\n            }).catch((err) => {\r\n                console.error(err)\r\n            })\r\n            return result;\r\n        \r\n        }).then((result) => {\r\n            addUserPost(result.id);\r\n        }).catch(() =>{\r\n            console.log(\"error with creating post\");\r\n        });\r\n    }\r\n\r\n    const getOptions = (options, option) => {\r\n        return options.map((name) => {\r\n            return <MenuItem key={option+\"-\"+name} value={name}>{name}</MenuItem>;\r\n        });\r\n    };\r\n\r\n    const handleTitleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue.match(/[%<>\\\\$'\"]/)) {\r\n            return\r\n        }\r\n\r\n        setValidation(cur => {return {...cur, title: newValue !== \"\"}});\r\n        setTitle(newValue);\r\n    }\r\n\r\n    const handlePriceChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue.match(/[-]/)) {\r\n            return\r\n        }\r\n\r\n        setValidation(cur => {return {...cur, price: newValue !== \"\"}});\r\n        setPrice(newValue);\r\n    }\r\n\r\n    const handleBrandChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, brand: true}});\r\n        }\r\n        \r\n        setBrand(newValue);\r\n    }\r\n\r\n    const handleSaleChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, sale: true}});\r\n        }\r\n\r\n        setType(newValue);\r\n    }\r\n\r\n    const handleConditionChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, condition: true}});\r\n        }\r\n        \r\n        setCondition(newValue);\r\n    }\r\n\r\n    const handleBladeChange = (event) => {\r\n        let newValue = event.target.value;\r\n        if (newValue !== \"\") {\r\n            setValidation(cur => {return {...cur, blade: true}});\r\n        }\r\n        \r\n        setBlade(newValue);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"create-container\">\r\n            <Row>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <TextField fullWidth label=\"title\" color=\"\" error={validation.title === false && disableSubmit} type=\"search\" value={title} onChange={handleTitleChange} />\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <TextField fullWidth label=\"price\" color=\"\" error={validation.price === false && disableSubmit} type=\"number\" value={price} onChange={handlePriceChange}/>\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <FormControl fullWidth error={validation.brand === false && disableSubmit}>\r\n                        <InputLabel id=\"brand-label\">Brand</InputLabel>\r\n                        <Select\r\n                            labelId=\"brand-label\"\r\n                            id=\"brand-select\"\r\n                            label=\"Brand\"\r\n                            defaultValue=\"\"\r\n                            onChange={handleBrandChange}>\r\n                            {getOptions(brands, \"brand\")}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <FormControl fullWidth error={validation.sale === false && disableSubmit}>\r\n                        <InputLabel id=\"sale-type-label\">Sale Type</InputLabel>\r\n                        <Select\r\n                            labelId=\"sale-type-label\"\r\n                            id=\"sale-type-select\"\r\n                            label=\"Sale Type\"\r\n                            defaultValue=\"\"\r\n                            onChange={handleSaleChange}>\r\n                            {getOptions(types, \"type\")}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <FormControl fullWidth error={validation.condition === false && disableSubmit}>\r\n                        <InputLabel id=\"condition-label\">Condition</InputLabel>\r\n                        <Select\r\n                            labelId=\"condition-label\"\r\n                            id=\"condition-select\"\r\n                            label=\"Condition\"\r\n                            defaultValue=\"\"\r\n                            onChange={handleConditionChange}>\r\n                            {getOptions([1,2,3,4,5,6,7,8,9,10], \"condition\")}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Col>\r\n                <Col xs={12} md={6} className=\"create-input\">\r\n                    <FormControl fullWidth error={validation.blade === false && disableSubmit}>\r\n                        <InputLabel id=\"blade-label\">Blade</InputLabel>\r\n                        <Select\r\n                            labelId=\"blade-label\"\r\n                            id=\"blade-select\"\r\n                            label=\"Blade\"\r\n                            defaultValue=\"\"\r\n                            onChange={handleBladeChange}>\r\n                            {getOptions(blades, \"blade\")}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <TextareaAutosize style={{width: \"100%\"}} minRows={5} value={description} placeholder=\"Description\" label=\"description\" onChange={(event) => setDescription(event.target.value)} />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {pictureInputs()}\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} className=\"center\">\r\n                    <Button disabled={disableSubmit} className=\"submit-button\" onClick={createPost}>Submit</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CreatePost;","import CreatePost from './CreatePost';\r\n\r\nexport default CreatePost;"],"names":["useState","title","setTitle","description","setDescription","type","setType","brand","setBrand","condition","setCondition","price","setPrice","setBlade","disableSubmit","setDisableSubmit","files","setFiles","showFiles","setShowFiles","setPercent","numberOfUploads","setNumberOfUploads","sale","blade","validation","setValidation","isValidated","useMemo","valid","Object","values","some","item","createPost","alert","postsCollectionRef","collection","db","addDoc","numberOfImages","length","timeStamp","Date","now","author","name","auth","displayName","id","uid","then","result","promises","map","file","index","storageRef","ref","storage","uploadTask","uploadBytesResumable","push","on","snapshot","percent","Math","round","bytesTransferred","totalBytes","err","console","log","Promise","all","catch","error","addUserPost","getOptions","options","option","MenuItem","value","Container","className","Row","Col","xs","md","TextField","fullWidth","label","color","onChange","event","newValue","target","match","cur","FormControl","InputLabel","Select","labelId","defaultValue","brands","types","blades","TextareaAutosize","style","width","minRows","placeholder","allInputs","i","sm","htmlFor","onClick","splice","e","URL","createObjectURL","accept","size","src","alt","pictureInputs","Button","disabled"],"sourceRoot":""}