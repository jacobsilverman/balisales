{"version":3,"file":"static/js/775.2c5b3f0c.chunk.js","mappings":"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","sources":["Components/Body/Posts/Post/DeleteModal/DeleteModal.js","Components/Body/Posts/Post/EditModal/EditModal.js"],"sourcesContent":["import { Modal } from '@mui/material';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nconst DeleteModal = ({deletePost, item, openDeleteModal, setOpenDeleteModal}) => {\n    return (\n        <Modal open={openDeleteModal} id=\"delete-modal\">\n            <Row className=\"modal-dialog delete-modal\">\n                <Col xs={5} sm={5} md={2} className=\"modal-content modal-background center\">\n                    <Row className=\"modal-header\">\n                        <Col className=\"modal-title\">Do you want to delete this post?</Col>\n                    </Row>\n                    <Row>\n                    <Col xs={6}>\n                            <Button onClick={() => setOpenDeleteModal(false)}>no</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {deletePost(item);setOpenDeleteModal(false)}}>yes</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import { useState } from 'react';\n\nimport { brands, types } from '../../../../../Data/Constants';\n\nimport DeleteModal from '../DeleteModal/DeleteModal';\n\nimport { MenuItem, Modal, TextareaAutosize } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { doc, deleteDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../../../../../firebase-config';\nimport { deleteUserPost } from '../../../../../Data/Services/userInfo';\n// import { FaImage } from \"react-icons/fa\";\n\nimport { ref, deleteObject, getStorage } from \"firebase/storage\";\n\nconst EditModal = ({item, openEditModal, setOpenEditModal, filterPosts, setFilterPosts}) => {\n    const [title, setTitle] = useState(item.title);\n    const [description, setDescription] = useState(item.description);\n    const [type, setType] = useState(item.type);\n    const [brand, setBrand] = useState(item.brand);\n    const [condition, setCondition] = useState(item.condition);\n    const [price, setPrice] = useState(item.price);\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\n    // const [removedImages, setRemovedImages] = useState({});\n    console.log(item.id);\n\n    // State to store uploaded file\n    // const [file, setFile] = useState(\"\");\n    \n    // // Handle file upload event and update state\n    // function handleChange(event) {\n    //     setFile(event.target.files[0]);\n    // }\n\n    const getOptions = (options, key) => {\n        return options.map((name) => {\n            return <MenuItem key={key+\"-\"+name} value={name}>{name}</MenuItem>;\n        });\n    };\n\n    const editPost = async () => {\n        const postDocRef = doc(db, \"posts\", item.id);\n        await setDoc(postDocRef, {\n            title,\n            type,\n            brand, \n            condition,\n            price,\n            description,\n            timeStamp: Date.now(),\n            numberOfImages: item.numberOfImages,\n            author: {name: item.author.name, id: item.author.id }\n        }).then(() => {\n            const pictureRef = ref(getStorage(), `PostImages/${item.id}/image-0`);\n            console.log(\"pictureRef: \", pictureRef);\n            // uploadBytesResumable(pictureRef, file);\n        }).catch((error) => {\n            console.error(\"problem: \", error)\n        }).finally(() => {\n            window.location.reload();\n        });\n    }\n\n    const deletePost = async (item) => {\n\t\tconst storage = getStorage();\n        const postDoc = doc(db, \"posts\", item.id);\n\t\tawait deleteDoc(postDoc);\n\t\tdeleteUserPost(item.id);\n\t\tfor (var i = 0; i < item.numberOfImages; i++) {\n\t\t\tconst pictureRef = ref(storage, `PostImages/${item.id}/image-${i}`);\n\t\t\tawait deleteObject(pictureRef);\n\t\t}\n\n\t\tsetFilterPosts(\n\t\t\tfilterPosts?.filter((ele) => {\n\t\t\t\treturn ele.id !== item.id;\n\t\t\t})\n\t\t)\n    }\n\n    // const handleImageClick = (url) => {\n    //     setRemovedImages(cur => {\n    //         cur[url] = !cur[url] ?? true\n    //         return cur;\n    //     });\n    //     console.log(removedImages);\n    // }\n\n    // const pictures = (\n    //     <Grid container>\n    //         {item.urls.map((url) => {\n    //             return (\n    //                 <Grid item key={url} className=\"center\" style={{backgroundImage: `url(${url})`, backgroundSize: \"100% 100%\", width: \"100px\", height: \"100px\"}} onClick={() => handleImageClick(url)} >\n    //                     {removedImages[url]}\n    //                 </Grid>\n    //             )})}\n    //     </Grid>\n    // );\n\n    // const addPicture = (\n    //     <Row className=\"edit-input\">    \n    //         {/* <Col className=\"center\">\n    //             <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n    //         </Col> */}\n    //         <Col xs={12} className=\"setting-item\">\n    //             <label className='profile-label' htmlFor=\"inputTag\">\n    //                 <span style={{color:\"black\"}}>Add Picture</span>\n    //                 <input id=\"inputTag\" className='profile-input' type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n    //                 <br />\n    //                 {<FaImage size={40}  />}\n    //             </label>\n    //         </Col>\n    //     </Row>\n    // );\n\n    return (\n        <Modal open={openEditModal}>\n            <Row className=\"edit-modal\">\n                <Col xs={7} className=\"modal-background center\">\n                    <DeleteModal deletePost={deletePost} item={item} openDeleteModal={openDeleteModal} setOpenDeleteModal={setOpenDeleteModal} />\n                    <Row className=\"edit-input\">\n                        <Col xs={6} sm={9} className=\"left\">\n                            <h2>Edit</h2>\n                        </Col>\n                        <Col xs={6} sm={3}>\n                            <Button variant=\"danger\" onClick={(e) => {e.preventDefault();setOpenDeleteModal(true);}}>Delete</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={title} label=\"Title\" className=\"input-width\" onChange={(event) => setTitle(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={price} label=\"Price\" className=\"input-width\" onChange={(event) => setPrice(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"brand-edit-label\">Brand</InputLabel>\n                            <Select\n                                labelId=\"brand-edit-label\"\n                                id=\"brand-edit-select\"\n                                size=\"small\"\n                                value={brand}\n                                label=\"Brand\"\n                                onChange={(event) => setBrand(event.target.value)}>\n                                {getOptions(brands, \"brand\")}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"business-edit-label\">Business</InputLabel>\n                            <Select\n                                labelId=\"business-edit-label\"\n                                id=\"business-edit-select\"\n                                size=\"small\"\n                                value={type}\n                                label=\"Business\"\n                                onChange={(event) => setType(event.target.value)}>\n                                {getOptions(types, \"type\")}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"condition-edit-label\">Condition</InputLabel>\n                            <Select\n                                labelId=\"condition-edit-label\"\n                                id=\"condition-edit-select\"\n                                size=\"small\"\n                                value={condition}\n                                label=\"Condition\"\n                                onChange={(event) => setCondition(event.target.value)}>\n                                {getOptions([1,2,3,4,5,6,7,8,9,10], \"condition\")}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextareaAutosize fullwidth=\"true\" minRows={3} value={description} placeholder=\"Description\" label=\"description\" onChange={(event) => setDescription(event.target.value)} />\n                    </Row>\n                    {/* {addPicture}\n                    {pictures} */}\n                    <Row className=\"edit-input\">\n                        <Col xs={6}>\n                            <Button onClick={() => setOpenEditModal(false)}>Cancel</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {editPost();setOpenEditModal(false)}}>Submit</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default EditModal;"],"names":["deletePost","item","openDeleteModal","setOpenDeleteModal","Modal","open","id","Row","className","Col","xs","sm","md","Button","onClick","openEditModal","setOpenEditModal","filterPosts","setFilterPosts","useState","title","setTitle","description","setDescription","type","setType","brand","setBrand","condition","setCondition","price","setPrice","console","log","getOptions","options","key","map","name","MenuItem","value","editPost","postDocRef","doc","db","setDoc","timeStamp","Date","now","numberOfImages","author","then","pictureRef","ref","getStorage","catch","error","finally","window","location","reload","storage","postDoc","deleteDoc","deleteUserPost","i","deleteObject","filter","ele","variant","e","preventDefault","TextField","fullWidth","size","label","onChange","event","target","FormControl","InputLabel","Select","labelId","brands","types","TextareaAutosize","fullwidth","minRows","placeholder"],"sourceRoot":""}