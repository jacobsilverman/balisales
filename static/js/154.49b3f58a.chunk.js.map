{"version":3,"file":"static/js/154.49b3f58a.chunk.js","mappings":"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","sources":["Data/Services/PostInfo.js","Components/SelectPost/SelectPost.js","Components/SelectPost/index.js"],"sourcesContent":["import { doc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../../firebase-config';\r\nimport { ref, getDownloadURL, getStorage } from \"firebase/storage\";\r\n\r\nexport const getPost = async (id) => {\r\n    const docRef = doc(db, \"posts\", id);\r\n    const postData = await getDoc(docRef).then(async (data) => {\r\n        let parsedItem = { ...data.data(), id: data.id, urls: []};\r\n\r\n        for (var i = 0; i<parsedItem.numberOfImages; i++) {\r\n          const storage = await getStorage();\r\n          const listRef = ref(storage, `/PostImages/${data.id}/image-${i}`);\r\n          await getDownloadURL(listRef)\r\n            .then((url) => {\r\n              parsedItem.urls.push(url);\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n        };\r\n\r\n        return parsedItem;\r\n    });\r\n    return postData;\r\n}","import { Fragment, useEffect, useState } from 'react';\r\n\r\n\r\nimport { getProfilePicture } from '../../Data/Services/userInfo.js';\r\nimport { getPost } from '../../Data/Services/PostInfo.js';\r\nimport defaultProfile from '../../Data/Images/default-profile.jpg';\r\n\r\nimport Spinner from '../../Data/Constants/Spinner';\r\n\r\nimport './SelectPost.scss';\r\n\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction SelectPost() {\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n    const params = Object.fromEntries(urlSearchParams.entries());\r\n    const { t } = useTranslation();\r\n    \r\n    const [createdDate, setCreatedData] = useState(null);\r\n\r\n    const [displayImage, setDisplayImage] = useState(0);\r\n    const [displayPost, setDisplayPost] = useState({});\r\n\r\n    const [profilePic, setProfilePic] = useState();\r\n\r\n    useEffect(() => {\r\n        getPost(params.id).then((data) => {\r\n            var dateCreated = new Date(data?.timeStamp).toLocaleDateString();\r\n\r\n            setDisplayPost(data);\r\n            setCreatedData(dateCreated);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!displayPost?.author?.id) {\r\n            return\r\n        }\r\n        getProfilePicture(displayPost?.author?.id).then((result) => {\r\n            setProfilePic(result);\r\n        }).catch(() => {\r\n            setProfilePic(defaultProfile);\r\n        });\r\n    }, [displayPost]);\r\n\r\n    const postPictures = displayPost?.urls?.map((image, index) => {\r\n        const pictureCls = `${index===displayImage ? 'show' : 'hidden'} image-container align-items-end`;\r\n\r\n        return (\r\n            <Col xs={11} sm={11} md={7} style={{backgroundImage: `url(${image})`}} className={pictureCls}>\r\n                <Link className=\"link-wrapper\" to={{pathname: '/profile', search: \"id=\" + displayPost?.author?.id}}>\r\n                    <div className=\"display-name\">{displayPost?.author?.name}</div>\r\n                    <div className=\"account-profile center\" style={{backgroundImage: `url(${profilePic})`}} />\r\n                </Link>\r\n            </Col>\r\n        );\r\n    })\r\n\r\n    const postBottomPictures = (\r\n        <Row className='all-pictures'>\r\n            {displayPost?.urls?.map((image, index) => {\r\n                return (\r\n                    <Col key={image} className='individual-picture' style={{backgroundImage: `url(${image})`, backgroundSize:'100% 100%', maxWidth: \"75px\", height: \"100px\", opacity: (displayImage === index) ? '.5': '1'}} onClick={() => {setDisplayImage(index)}} />\r\n                );\r\n            })}\r\n        </Row>\r\n    )\r\n\r\n    const displaySelectedPost = (\r\n        <Fragment>\r\n            <Col xs={12} className=\"display-title center\" >\r\n                <h1>{displayPost?.title}</h1>\r\n            </Col>\r\n            {displayPost?.urls && postPictures}\r\n            \r\n            {displayPost?.numberOfImages > 1 && postBottomPictures}\r\n            {displayPost?.numberOfImages > 1 &&\r\n            <Row>\r\n                <Col xs={6} className=\"previous-image\">\r\n                    <Button variant=\"contained\" onClick={() => setDisplayImage(cur => (cur-1) < 0 ? displayPost?.numberOfImages-1 : (cur-1))}>{t(\"Previous\")}</Button>\r\n                </Col>\r\n                <Col xs={6} className=\"next-image\">\r\n                    <Button variant=\"contained\" onClick={() => setDisplayImage(cur => (cur+1)%displayPost?.numberOfImages)}>{t(\"Next\")}</Button>\r\n                </Col>\r\n            </Row>}\r\n            \r\n            <Row style={{justifyContent:\"center\"}}>\r\n                <Col xs={12} className=\"info-container\">\r\n                    <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\r\n                        <div className=\"content-wrapper\">\r\n                            <div className=\"desciption-title\">\r\n                                {t(\"Created\")}\r\n                            </div>\r\n                            {createdDate}\r\n                        </div>\r\n                        <div className=\"content-wrapper\">\r\n                            <div className=\"desciption-title\">\r\n                                {t(displayPost?.type)}\r\n                            </div>\r\n                            {displayPost?.price}\r\n                        </div>\r\n                        <div className=\"content-wrapper\">\r\n                            <div className=\"desciption-title\">\r\n                                {displayPost?.condition}\r\n                            </div>\r\n                            {displayPost?.brand}\r\n                        </div>\r\n                    </div>\r\n                    <Row className=\"content-wrapper\">\r\n                        <div className=\"desciption-title\">\r\n                            {t(\"Description\")}\r\n                        </div>\r\n                        <Col xs={12}>\r\n                            {displayPost?.description}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    return (!createdDate || !displayPost || !profilePic )\r\n    ? (<Spinner />)\r\n    : displaySelectedPost;\r\n}\r\n\r\nexport default SelectPost;","import SelectPost from './SelectPost.js';\r\n\r\nexport default SelectPost;"],"names":["getPost","id","docRef","doc","db","getDoc","then","data","parsedItem","urls","i","numberOfImages","getStorage","storage","listRef","ref","getDownloadURL","url","push","catch","error","console","postData","urlSearchParams","URLSearchParams","window","location","search","params","Object","fromEntries","entries","t","useTranslation","useState","createdDate","setCreatedData","displayImage","setDisplayImage","displayPost","setDisplayPost","profilePic","setProfilePic","useEffect","dateCreated","Date","timeStamp","toLocaleDateString","author","getProfilePicture","result","defaultProfile","postPictures","map","image","index","pictureCls","Col","xs","sm","md","style","backgroundImage","className","to","pathname","name","postBottomPictures","Row","backgroundSize","maxWidth","height","opacity","onClick","displaySelectedPost","Fragment","title","Button","variant","cur","justifyContent","display","type","price","condition","brand","description","Spinner"],"sourceRoot":""}