{"version":3,"file":"static/js/906.3caeab7f.chunk.js","mappings":"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","sources":["Components/Account/Account.js","Components/Account/index.js","Components/Body/Post/DeleteModal/DeleteModal.js","Components/Body/Post/EditModal/EditModal.js","Components/Body/Post/Post.js","Components/Body/Post/index.js"],"sourcesContent":["\nimport {Fragment,  useEffect, useState } from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport { Col, Row } from 'react-bootstrap';\nimport Spinner from '../../Data/Constants/Spinner.js';\n\nimport Post from '../Body/Post';\nimport './Account.scss';\n\nimport { deleteUserPost, getUserPosts } from '../../Data/Services/userInfo';\n\nimport { getStorage, ref, deleteObject } from \"firebase/storage\";\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { db } from '../../firebase-config';\n\nfunction Account({user, accountView}) {\n\tconst [filterPosts, setFilterPosts] = useState([]);\n\n\tuseEffect(() => {\n        getUserPosts(user).then((result) => {\n\t\t\tresult.sort((a, b) => {\n\t\t\t\treturn b.timeStamp - a.timeStamp;\n\t\t\t});\n            setFilterPosts(result);\n        }).catch(() => {\n            console.error(\"cant get user posts\");\n        });\n\t}, []);\n\t\n    const deletePost = async (item) => {\n\t\tconst storage = getStorage();\n        const postDoc = doc(db, \"posts\", item.id);\n\t\tawait deleteDoc(postDoc);\n\t\tdeleteUserPost(item.id);\n\t\tfor (var i = 0; i < item.numberOfImages; i++) {\n\t\t\tconst pictureRef = ref(storage, `PostImages/${item.id}/image-${i}`);\n\t\t\tawait deleteObject(pictureRef);\n\t\t}\n\n\t\tsetFilterPosts(\n\t\t\tfilterPosts?.filter((ele) => {\n\t\t\t\treturn ele.id !== item.id;\n\t\t\t})\n\t\t)\n    }\n\n\tconst setAccountData = () => {\n\t\tif (filterPosts.length === 0) {\n\t\t\treturn (\n\t\t\t\t<Spinner />\n\t\t\t);\n\t\t} \n\n\t\tlet result = [];\n        let partition = [];\n        for (let i=0; i< filterPosts.length; i++){\n            partition.push(filterPosts[i]);\n            if ((i+1)%3===0 || i === filterPosts.length-1) {\n                result.push(partition);\n                partition = [];\n            }\n        };\n\n\t\treturn (\n            result.length > 0 && \n\t\t\t<Grid container style={{padding:'0px'}} className=\"grid-container-posts\">\n\t\t\t\t{result.map((arr) => {\n\t\t\t\t\treturn arr.map((item) => {\n\t\t\t\t\t\t\treturn <Post item={item} key={item.id} accountView={accountView} deletePost={deletePost} />\n\t\t\t\t\t\t})\n\t\t\t\t\t})}\n\t\t\t</Grid>\n\t\t\t ||<Row>\n\t\t\t\t<Col xs={12} className=\"center\">\n\t\t\t\t\tNo Posts Available\n\t\t\t\t</Col>\n\t\t\t</Row>\n        );\n    }\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{setAccountData()}\n\t\t</Fragment>\n\t);\n\t\n}\n\nexport default Account;","import Account from './Account.js';\n\nexport default Account;","import { Modal } from '@mui/material';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nconst DeleteModal = ({deletePost, item, openDeleteModal, setOpenDeleteModal}) => {\n    return (\n        <Modal open={openDeleteModal} id=\"delete-modal\">\n            <Row className=\"modal-dialog delete-modal\">\n                <Col xs={5} sm={5} md={2} className=\"modal-content modal-background center\">\n                    <Row className=\"modal-header\">\n                        <Col className=\"modal-title\">Do you want to delete this post?</Col>\n                    </Row>\n                    <Row>\n                    <Col xs={6}>\n                            <Button onClick={() => setOpenDeleteModal(false)}>no</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {deletePost(item);setOpenDeleteModal(false)}}>yes</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default DeleteModal;","import { useState } from 'react';\n\nimport { brands, types } from '../../../../Data/Constants';\n\nimport DeleteModal from '../DeleteModal/DeleteModal';\n\nimport { Grid, MenuItem, Modal, TextareaAutosize } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport Select from '@mui/material/Select';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { doc, setDoc } from 'firebase/firestore';\nimport { db } from '../../../../firebase-config';\n\nimport { FaImage } from \"react-icons/fa\";\n\nimport { ref, getStorage } from \"firebase/storage\";\n\nconst EditModal = ({item, openEditModal, setOpenEditModal, deletePost}) => {\n    const [title, setTitle] = useState(item.title);\n    const [description, setDescription] = useState(item.description);\n    const [type, setType] = useState(item.type);\n    const [brand, setBrand] = useState(item.brand);\n    const [condition, setCondition] = useState(item.condition);\n    const [price, setPrice] = useState(item.price);\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\n    const [numberOfImages, setNumberOfImages] = useState(item.numberOfImages);\n    const [removedImages, setRemovedImages] = useState({});\n\n\n    // State to store uploaded file\n    const [file, setFile] = useState(\"\");\n    \n    // Handle file upload event and update state\n    function handleChange(event) {\n        setFile(event.target.files[0]);\n    }\n\n    const getOptions = (options) => {\n        return options.map((name, key) => {\n            return <MenuItem key={key} value={name}>{name}</MenuItem>;\n        });\n    };\n\n    const editPost = async () => {\n        const postDocRef = doc(db, \"posts\", item.id);\n        await setDoc(postDocRef, {\n            title,\n            type,\n            brand, \n            condition,\n            price,\n            description,\n            timeStamp: Date.now(),\n            numberOfImages: numberOfImages,\n            author: {name: item.author.name, id: item.author.id }\n        }).then(() => {\n            const pictureRef = ref(getStorage(), `PostImages/${item.id}/image-0`);\n            console.log(\"pictureRef: \", pictureRef);\n            // uploadBytesResumable(pictureRef, file);\n        }).catch((error) => {\n            console.error(\"problem: \", error)\n        }).finally(() => {\n            window.location.reload();\n        });\n    }\n\n    const handleImageClick = (url) => {\n        setRemovedImages(cur => {\n            cur[url] = !cur[url] ?? true\n            return cur;\n        });\n        console.log(removedImages);\n    }\n\n    const pictures = (\n        <Grid container>\n            {item.urls.map((url) => {\n                return (\n                    <Grid item key={url} className=\"center\" style={{backgroundImage: `url(${url})`, backgroundSize: \"100% 100%\", width: \"100px\", height: \"100px\"}} onClick={() => handleImageClick(url)} >\n                        {removedImages[url]}\n                    </Grid>\n                )})}\n        </Grid>\n    );\n\n    const addPicture = (\n        <Row className=\"edit-input\">    \n            {/* <Col className=\"center\">\n                <input type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n            </Col> */}\n            <Col xs={12} className=\"setting-item\">\n                <label className='profile-label' htmlFor=\"inputTag\">\n                    <span style={{color:\"black\"}}>Add Picture</span>\n                    <input id=\"inputTag\" className='profile-input' type=\"file\" onChange={handleChange} accept=\"/image/*\" />\n                    <br />\n                    {<FaImage size={40}  />}\n                </label>\n            </Col>\n        </Row>\n    );\n\n    return (\n        <Modal open={openEditModal}>\n            <Row className=\"edit-modal\">\n                <Col xs={7} className=\"modal-background center\">\n                    <DeleteModal deletePost={deletePost} item={item} openDeleteModal={openDeleteModal} setOpenDeleteModal={setOpenDeleteModal} />\n                    <Row className=\"edit-input\">\n                        <Col xs={6} sm={9} className=\"left\">\n                            <h2>Edit</h2>\n                        </Col>\n                        <Col xs={6} sm={3}>\n                            <Button variant=\"danger\" onClick={(e) => {e.preventDefault();setOpenDeleteModal(true);}}>Delete</Button>\n                        </Col>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={title} label=\"Title\" className=\"input-width\" onChange={(event) => setTitle(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextField fullWidth size=\"small\" value={price} label=\"Price\" className=\"input-width\" onChange={(event) => setPrice(event.target.value)} />\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"brand-edit-label\">Brand</InputLabel>\n                            <Select\n                                labelId=\"brand-edit-label\"\n                                id=\"brand-edit-select\"\n                                size=\"small\"\n                                value={brand}\n                                label=\"Brand\"\n                                onChange={(event) => setBrand(event.target.value)}>\n                                {getOptions(brands, brand)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"business-edit-label\">Business</InputLabel>\n                            <Select\n                                labelId=\"business-edit-label\"\n                                id=\"business-edit-select\"\n                                size=\"small\"\n                                value={type}\n                                label=\"Business\"\n                                onChange={(event) => setType(event.target.value)}>\n                                {getOptions(types, type)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <FormControl fullWidth>\n                            <InputLabel size=\"small\" id=\"condition-edit-label\">Condition</InputLabel>\n                            <Select\n                                labelId=\"condition-edit-label\"\n                                id=\"condition-edit-select\"\n                                size=\"small\"\n                                value={condition}\n                                label=\"Condition\"\n                                onChange={(event) => setCondition(event.target.value)}>\n                                {getOptions([1,2,3,4,5,6,7,8,9,10], condition)}\n                            </Select>\n                        </FormControl>\n                    </Row>\n                    <Row className=\"edit-input\">\n                        <TextareaAutosize fullwidth=\"true\" minRows={3} value={description} placeholder=\"Description\" label=\"description\" onChange={(event) => setDescription(event.target.value)} />\n                    </Row>\n                    {/* {addPicture}\n                    {pictures} */}\n                    <Row className=\"edit-input\">\n                        <Col xs={6}>\n                            <Button onClick={() => setOpenEditModal(false)}>Cancel</Button>\n                        </Col>\n                        <Col xs={6}>\n                            <Button onClick={() => {editPost();setOpenEditModal(false)}}>Submit</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default EditModal;","import React, { Fragment, useMemo, useState } from 'react';\r\n\r\n// import { priceColors } from '../../../Data/Constants';\r\n\r\nimport './Post.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n \r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport EditModal from './EditModal/EditModal.js';\r\n// import AccountModal from '../../AccountModal';\r\n\r\nfunction Post({item, viewCount, accountView, deletePost}) {\r\n    const [openEditModal, setOpenEditModal] = useState(false);\r\n    // const [openAccountModal, setOpenAccountModal] = useState(false);\r\n\r\n    const queryParam = 'id='+item?.id;\r\n\r\n    // const priceCls = `price-container hidden-text color-${useMemo(() => {return priceColors(item?.type)}, [item?.type])}`;\r\n    const showViewCount = isNaN(12/viewCount);\r\n\r\n    return (\r\n        <Fragment>\r\n            <EditModal item={item} openEditModal={openEditModal} setOpenEditModal={setOpenEditModal} deletePost={deletePost}  />\r\n            \r\n            <Grid item className=\"post-container\" style={{backgroundImage: `url(${item?.urls[0]})`}} id={item?.id} xs={showViewCount ? 4 : 12/viewCount}>\r\n                {/* <div className=\"fake-background\"> */}\r\n                    <Link className=\"link\" to={!accountView && {pathname: '/singlePost', search: queryParam}} onClick={accountView && ((e) => {e.preventDefault();setOpenEditModal(true);})}>\r\n                        {item?.numberOfImages>1 && <svg style={{marginLeft: \"auto\", marginRight: \"1vw\", width:\"5vw\",height:\"5vw\",color:\"white\"}} viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M21 16V6H7V16H21M21 4C21.53 4 22.04 4.21 22.41 4.59C22.79 4.96 23 5.47 23 6V16C23 16.53 22.79 17.04 22.41 17.41C22.04 17.79 21.53 18 21 18H7C5.89 18 5 17.1 5 16V6C5 4.89 5.89 4 7 4H21M3 20H18V22H3C2.47 22 1.96 21.79 1.59 21.41C1.21 21.04 1 20.53 1 20V9H3V20Z\" /></svg>}\r\n                        {/* <Row> \r\n                            <Col xs={10} className=\"title-text hidden-text\">\r\n                                {item?.title?.toUpperCase()}\r\n                            </Col>\r\n                            <Col xs={2} className=\"delete-container\" style={{opacity: \"1\", visibility: \"visible\"}}>\r\n                                {item?.numberOfImages>1 && <svg style={{width:\"3vw\",height:\"3vw\",color:\"black\"}} viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M21 16V6H7V16H21M21 4C21.53 4 22.04 4.21 22.41 4.59C22.79 4.96 23 5.47 23 6V16C23 16.53 22.79 17.04 22.41 17.41C22.04 17.79 21.53 18 21 18H7C5.89 18 5 17.1 5 16V6C5 4.89 5.89 4 7 4H21M3 20H18V22H3C2.47 22 1.96 21.79 1.59 21.41C1.21 21.04 1 20.53 1 20V9H3V20Z\" /></svg>}\r\n                            </Col>\r\n                        </Row>\r\n                        {!accountView && <Row> \r\n                            <Col className={priceCls}>\r\n                                <span className=\"price\">${item?.price}</span>\r\n                            </Col>\r\n                        </Row>} */}\r\n                    </Link>\r\n                {/* </div> */}\r\n            </Grid> \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Post;","import Post from './Post.js';\r\n\r\nexport default Post;"],"names":["user","accountView","useState","filterPosts","setFilterPosts","useEffect","getUserPosts","then","result","sort","a","b","timeStamp","catch","console","error","deletePost","item","storage","getStorage","postDoc","doc","db","id","deleteDoc","deleteUserPost","i","numberOfImages","pictureRef","ref","deleteObject","filter","ele","Fragment","length","Spinner","partition","push","Grid","container","style","padding","className","map","arr","Post","Row","Col","xs","setAccountData","Account","openDeleteModal","setOpenDeleteModal","Modal","open","sm","md","Button","onClick","openEditModal","setOpenEditModal","title","setTitle","description","setDescription","type","setType","brand","setBrand","condition","setCondition","price","setPrice","removedImages","setRemovedImages","setFile","getOptions","options","name","key","MenuItem","value","editPost","postDocRef","setDoc","Date","now","author","log","finally","window","location","reload","urls","url","backgroundImage","backgroundSize","width","height","cur","handleImageClick","variant","e","preventDefault","TextField","fullWidth","size","label","onChange","event","target","FormControl","InputLabel","Select","labelId","brands","types","TextareaAutosize","fullwidth","minRows","placeholder","viewCount","queryParam","showViewCount","isNaN","to","pathname","search","marginLeft","marginRight","color","viewBox","fill","d"],"sourceRoot":""}